#include <iostream>
#include "xparameters.h"
#include "xstatus.h"
#include "xaxidma.h"

#define DMA_DEV_ID    XPAR_AXI_DMA_0_DEVICE_ID

#define TX_BUFFER_BASE		0x00000000
#define RX_BUFFER_BASE		0x00000010  // size 16
#define PACKET_LEN		10



int main()
{
	// Instantiate a DMA device
	XAxiDma axiDma;
	// Looking for device
	XAxiDma_Config *cfgPtr;
	cfgPtr = XAxiDma_LookupConfig(DMA_DEV_ID);
	if(cfgPtr == NULL)
	{
		std::cout << "Can't find the DMA device configuration!" << std::endl;
	}
	// initialize the DMA device
	status = XAxiDma_CfgInitialize(&axiDma, cfgPtr);
	if(status == XST_FAILURE)
	{
		std::cout << "Initializing the DMA device failure!" << std::endl;
	}
	// Disable the interrupt
	XAxiDma_IntrDisable(&axiDma, XAXIDMA_IRQ_ALL_MASK, XAXIDMA_DEVICE_TO_DMA);
	XAxiDma_IntrDisable(&axiDma, XAXIDMA_IRQ_ALL_MASK, XAXIDMA_DMA_TO_DEVICE);
	// generate the data
	u8 *TxBufferPtr;
	TxBufferPtr = (u8 *)TX_BUFFER_BASE;
	for(int index = 0; index < PACKET_LEN; index++)
	{
		TxBufferPtr[index] = 0x01;
	}
	// flush the data to DDR
	Xil_DCacheFlushRange((UINTPTR)TxBufferPtr, PACKET_LEN);

	int status = XST_SUCCESS;


	std::cout << "OK!" << std::endl;
	return 0;
}
